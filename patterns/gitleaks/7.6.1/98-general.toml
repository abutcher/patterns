# Genearal Potential Leak Patterns

[[rules]]
  description = "Asymmetric Private Key"
  regex = '''-----BEGIN ((EC|PGP|DSA|RSA|OPENSSH) )?PRIVATE KEY( BLOCK)?-----'''
  tags = ["alert:repo-owner", "key", "asymmetric-private-key", "type:secret"]

  [rules.allowlist]
    paths = [
      # Ignore keys in a test(s) folder
      '''test(s)?\/.*.(txt|der|key|pem)$''',
      # Ignore keys with test in their name
      '''[^\/]+test[^\/]+(txt|der|key|pem)$''',
      # Ignore common example keys
      '''(dummy|example).*(key|pem)''',
      # Ignore ssh utilities that might have key headers in them
      '''\/(s)?bin\/ssh(-add|-agent|-autoproxy|-copy-id|-keygen|-keyscan|-sign-request|d)?$''',
      # Ignore libs that might have key headers in them
      '''\/lib\w+\/lib(gnutls|ssh).so''',
      # Ignore utils that might have key headers in them
      '''\/lib\w+\/(cockpit-|openssh\/ssh-)''',
      # Data dirs that contain key headers to identify them
      '''\/usr\/share\/(mime|misc)''',
    ]

    regexes = [
      # Anything less than 15 characters
      '''PRIVATE KEY( BLOCK)?-----.{0,15}-----END''',
      # The key has spaces in it so it's probably a placeholder
      '''PRIVATE KEY( BLOCK)?-----.*(\s).*-----END''',
      # Ignore some keys assigned to test vars
      # e.g. TEST_SERVER_KEY = """-----BEGIN RSA PRIVATE KEY-----
      '''(?i)\w*(fake|example|test)\w*(\s+)?[:=]+(\s+)?(\[)?(\s+)?(\"\"\"|\"|\'|`)?-----BEGIN''',
      # Things that look like code looking for headers
      #   like: if (privateKey === "-----BEGIN RSA PRIVATE KEY-----") {
      '''if.*==\s*[\"|\']-----BEGIN ((EC|PGP|DSA|RSA|OPENSSH) )?PRIVATE KEY( BLOCK)?-----[\"|\']''',
      #   like: "-----BEGIN RSA PRIVATE KEY-----")
      '''-----BEGIN ((EC|PGP|DSA|RSA|OPENSSH) )?PRIVATE KEY( BLOCK)?-----[\"\']?\)''',
    ]

[[rules]]
  description = "AWS Access Key"
  # Assumes there's at least one non uppercase letter or number before the key
  # to help avoid thinking things in the middle of hashes are keys.
  regex = '''[^A-Z0-9\/](A3T[A-Z0-9]|AKIA|AGPA|AIDA|AIPA|ANPA|ANVA|ASIA)([A-Z0-9]{16})'''
  tags = ["alert:repo-owner", "key", "aws", "type:secret"]

  [rules.allowlist]
    regexes = [
      # Ingore example keys
      '''EXAMPLE''',
      # Ingore sample keys (range limit added to ensure the key has some
      # proximity to "sample:")
      '''(S|s)ample:.{0,1000}(A3T[A-Z0-9]|AKIA|AGPA|AIDA|AIPA|ANPA|ANVA|ASIA)''',
      # Ignore presigned URLs
      '''X-Amz-Signature''',
    ]

  [[rules.entropies]]
    Min = "3.2"
    Max = "8"
    Group = "2"

[[rules]]
  description = "AWS MWS Key"
  regex = '''amzn\.mws\.[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'''
  tags = ["alert:repo-owner", "key", "aws", "mws", "type:secret"]

[[rules]]
  description = "AWS Secret Key"
  regex = '''(?i)aws([^:=(,\/\s]{0,20})?(\s+)?[:=(](\s+)?(?-i)['\"]?([A-Za-z0-9\/+]{40})['\"]?'''
  tags = ["alert:repo-owner", "key", "aws", "type:secret"]

  [rules.allowlist]
    regexes = [
      '''arn:aws:iam:''',
      # Ignore common placeholders
      '''(?i)aws([^:=(,\/\s]{0,20})?(\s+)?[:=(](\s+)?['\"]?.*(example|abcdef|get|name|serv|spec|profile|role|resource|test|curl|cont|conf|cert).*['\"]?''',
      # Ignore EXAMPLE base64 encoded
      '''(?i)aws([^:=(,\/\s]{0,20})?(\s+)?[:=(](\s+)?['\"]?.*(?-i)(RVhBTVBMR|VYQU1QTEU|FWEFNUExF).*['\"]?''',
    ]

  [[rules.entropies]]
    Min = "4"
    Max = "8"
    Group = "4"

[[rules]]
  description = "Container Registry Authentication"
  # Example match: registry.New("registry", "username", "password")
  regex = '''registry\.New\((\s+)?\"[^\"]+\",(\s+)?\"[^\"]+\",(\s+)?(\"[^\"]+\")(\s+)?\)'''
  tags = ["alert:repo-owner", "key", "container-registry", "type:secret"]

  [[rules.entropies]]
    Min = "0"
    Max = "8"
    Group = "4"

[[rules]]
  description = "URL User and Password"
  regex = ''':\/\/([^:\/\s\"\']+)?:([^@\/\s\"]{3,})@[\w\.\-]+'''
  tags = ["alert:repo-owner", "password", "basic-auth", "type:secret"]

  [[rules.entropies]]
    Min = "2.4"
    Max = "8"
    Group = "2"

  [rules.allowlist]
    paths = [
      # Usually a project not owned by the user that has a lot of FPs for us when
      # folks fork it. But make sure to include the azure-cli aro modules
      '/azure-(cli.+\/command_modules\/([^a]|a[^r])|sdk-for-python\/|rest-api-specs\/|docs\/)',
    ]
    regexes = [
      # Things like: https://user:<pass>@host
      '''(?i):\/\/([^:\/\s\"\']+)?:(\[)?(_)?<[^@\/\s]+>(_)?(\])?@[\w\.\-]+''',
      # Things like: https://user:&lt;pass&gt;@host (HTML for <pass>)
      '''(?i):\/\/([^:\/\s\"\']+)?:&lt;[^@\/\s]+&gt;@[\w\.\-]+''',
      # Things like: https://user:__pass__@host
      '''(?i):\/\/([^:\/\s\"\']+)?:__[^@\/\s]+__@[\w\.\-]+''',
      # Things like: https://user:%pass%@host
      '''(?i):\/\/([^:\/\s\"\']+)?:%[^@\/\s]+%@[\w\.\-]+''',
      # Things like: https://user:$pass$@host
      # Things like: https://user:$pass@host
      '''(?i):\/\/([^:\/\s\"\']+)?:\$[a-z][a-z\_\-]+(\$)?@[\w\.\-]+''',
      # Things like: https://user:afacae....adsfae@host
      ''':\/\/([^:\/\s\"\']+)?:[^@\/\s\"]*(\.\.\.|\*\*\*)[^@\/\s\"]*@[\w\.\-]+''',
      # Things like: https://user:${pass}@host
      '''(?i):\/\/([^:\/\s\"\']+)?:(\")?\$\{[^@\/\s]+\}(\")?@[\w\.\-]+''',
      # Things like: https://user:{pass}@host
      '''(?i):\/\/([^:\/\s\"\']+)?:\{[^@\/\s]+\}@[\w\.\-]+''',
      # Things like: https://user:[pass]@host
      '''(?i):\/\/([^:\/\s\"\']+)?:\[[^@\/\s]+\]@[\w\.\-]+''',
      # Things like: https://user:${pass}@host
      # Things like: https://user:\${pass}@host
      '''(?i):\/\/([^:\/\s\"\']+)?:(\\)?\$\{[^@\/\s]+\}@[\w\.\-]+''',
      # Things like: https://user:$(pass)@host
      '''(?i):\/\/([^:\/\s\"\']+)?:\$\([^@\/\s]+\)@[\w\.\-]+''',
      # Things like: https://user:#{pass}@host
      '''(?i):\/\/([^:\/\s\"\']+)?:\#\{[^@\/\s]+\}@[\w\.\-]+''',
      # Things like: https://user:$SOME_ENV_VARIABLE-optional-text@host
      '''(?i):\/\/([^:\/\s\"\']+)?:(?-i)(")?\$[A-Z][0-9A-Z_]{4,}([\w\-]+)?(")?@[\w\.\-]+''',
      # Things like: https://host:port,org.java.stuff@commit
      ''':\/\/([^:\/\s\"\']+)?:\d{3,4},[\w\.]+@[\w\.\-]+''',
      # Example.Com
      ''':\/\/([^:\/\s\"\']+)?:([^@\/\s\"]{3,})@example.com''',
      # Common spammy placeholder creds
      '''(?i):\/\/([^:\/\s\"\']+)?:(candlepin|default|keylime|rabbitmq|pbench|postgres|prisma|gitops|telemetry|x-oath-basic|redhat)@[\w\.\-]+''',
      # Various words at the start and end that signify a placeholder
      '''(?i):\/\/([^:\/\s\"\']+)?:(\/etc\/|data\/|\/path\/|(\/var)?\/run\/|(0)?12345|abc(d|12)|admin|ansible|auto|bool:|capi-openstack|change|client|confirm|contrase|demo|dict|django-insecure-|example|(ENC\[|RU5DW|VOQ|FTk)|enter_|fake|false|file:|fixme|grub|installation_prefix|invalid|libvirt|none|not|placeholder|pass(w)?(o|0)?(r)?(d|t)(!)?|provide|path|quickstart|replace|sample|(my)?secret|self|spec\.|str:|(my)?t(e)?mp|test|this|update|value|your_)(.+?)?@[\w\.\-]+''',
      '''(?i):\/\/([^:\/\s\"\']+)?:.+?(\.((jp(e)?g)|png|svg|txt|yaml|tmpl)|-auth(entication)?|-cert(ification)?(s)?|-oauth-basic|-demo|(-|_)key|-tls|_id|_private|(0)?12345(6)?|client|(change|fix)me|config(uration)?|cred(ential)?(s)?|data|default|devel(opment)|example(.com|key)?|hash|here|json|(_|-)pwd|placeholder|pass((w)?(o|0)?(r)?(d|t)(!)?)?|raw\(|registry|required|secret(s|_v\d)?|string|test|token|uuid|value|xxxxx|y(a)?ml)@[\w\.\-]+''',
    ]

[[rules]]
  description = "Dynatrace Token"
  regex = '''dt0[a-zA-Z]{1}[0-9]{2}\.[A-Z0-9]{24}\.[A-Z0-9]{64}'''
  tags = ["alert:repo-owner", "key", "dynatrace", "type:secret"]

[[rules]]
  description = "Facebook Secret Key"
  regex = '''(?i)(facebook)([0-9A-Za-z_-]{0,20})?(\s+)?[:|=|(](\s+)?(?-i)['\"]?[0-9a-f]{32}['\"]?'''
  tags = ["alert:repo-owner", "key", "facebook", "type:secret"]

[[rules]]
  description = "Google API Key"
  regex = '''AIza[0-9A-Za-z\\-_]{35}([^0-9A-Za-z\\-_]|$)'''
  tags = ["alert:repo-owner", "key", "google", "type:secret"]

[[rules]]
  description = "Heroku API Key"
  regex = '''(?i)heroku(.{0,20})?[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'''
  tags = ["alert:repo-owner", "key", "heroku", "type:secret"]

[[rules]]
  description = "Htpasswd File"
  file = '''htpasswd'''
  regex = '''.+?:([^\s]+)'''
  tags = ["alert:repo-owner", "key", "password", "general", "type:secret"]

  [rules.allowlist]
    regexes = [
      # Ignore comments
      '''^(\s+)?#''',
    ]
    files = [
      # Ignore these file extensions with htpasswd in the name
      '''(.+?)\.(c|go|java|js(\.map)?|html|md|py|rb|sh|yml|yaml)$''',
    ]

  [[rules.entropies]]
    Min = "4"
    Max = "8"
    Group = "1"

[[rules]]
  description = "MailChimp API Key"
  regex = '''(?i)(mailchimp|mc)(.{0,20})?[0-9a-f]{32}-us[0-9]{1,2}'''
  tags = ["alert:repo-owner", "key", "mailchimp", "type:secret"]

[[rules]]
  description = "Mailgun API Key"
  regex = '''((?i)(mailgun|mg)(.{0,20})?)key-[0-9a-z]{32}'''
  tags = ["alert:repo-owner", "key", "mailgun", "type:secret"]

[[rules]]
  description = "General Secret"
  # Things like:
  #   password = "value"
  #   password_key = "value"
  #   password-key = "value"
  #   secret = "value"
  #   secret = 'value'
  #   secret_key = "value"
  #   secret-key = "value"
  #   secretkey = "value"
  #   ...
  regex = '''(?i)(secret|password)(_|-)?(key)?[\"\']?(\s+)?[:=](\s+)?[\"\']([^\"\s]+?)[\"\']'''
  tags = ["alert:repo-owner", "key", "general", "secret", "type:secret"]

  [[rules.entropies]]
    Min = "3.35"
    Max = "8"
    Group = "6"

  [rules.allowlist]
    paths = [
      # Usually a project not owned by the user that has a lot of FPs for us when
      # folks fork it. But make sure to include the azure-cli aro modules
      '/azure-(cli.+\/command_modules\/([^a]|a[^r])|sdk-for-python\/|rest-api-specs\/|docs\/)',
    ]

    regexes = [
      # Things like:
      #   secret = "asdfasdfas" # nosec (used by bandit)
      '''#(\s+)?nosec(\s+|$)''',
      #   secret = "asdfasdfas" # noqa: E501
      '''#(\s+)?noqa(:[\s\w]+)?$''',
      #   secret = "asdfasdfas" //nolint:gosec
      '''\/\/(\s+)?nolint:gosec(\s+|$)''',
      #   secret = "_PLACEHOLDER_"
      #   secret = "<PLACEHOLDER>"
      #   secret = "@@PLACEHOLDER@@"
      #   secret = ").append("foo")
      #   secret = "%PLACEHOLDER%"
      #   secret = "$PLACEHOLDER$"
      #   secret = "`PLACEHOLDER`"
      #   secret = "[PLACEHOLDER]"
      #   secret = "[%PLACEHOLDER%]"
      #   secret = "$(PLACEHOLDER..."
      #   secret = "\$(PLACEHOLDER..."
      '''(?i)(secret|password)(_|-)?(key)?[\"\']?(\s+)?[:=](\s+)?[\"\'](_.+?_|<.+?>|@@.+?@@|\).+?\(|%.+?%|\$.+?\$|`.+?`|\[.+?\]|\[%.+?%\]|(\\)?\$\(.*)[\"\']''',
      #   secret = "ALL_UPPER_LETTERS_OR_UNDERSCORES"
      '''(?i)(secret|password)(_|-)?(key)?[\"\']?(\s+)?[:=](\s+)?[\"\'](?-i)[A-Z_]+?[\"\']''',
      #   secret = "{PLACEHOLDER}"
      #   secret = "%{PLACEHOLDER}"
      #   secret = "\%{PLACEHOLDER}"
      #   secret = "${PLACEHOLDER}"
      #   secret = "\${PLACEHOLDER}"
      #   secret = "#{PLACEHOLDER}"
      #   secret = "\#{PLACEHOLDER}"
      #   secret = "\${PLACEHOLDER}"
      '''(?i)(secret|password)(_|-)?(key)?[\"\']?(\s+)?[:=](\s+)?[\"\'](\\)?[\$%#]?\{.+?\}[\"\']''',
      #   secret = "Some...placeholder"
      #   secret = "Some***placeholder"
      '''(?i)(secret|password)(_|-)?(key)?[\"\']?(\s+)?[:=](\s+)?[\"\'][^\"\']*?(\.\.\.|\*\*\*)[^\"\']*?[\"\']''',
      #   "secret="+some_var+"asdfa"
      '''(?i)(secret|password)(_|-)?(key)?[\"\']?(\s+)?[:=](\s+)?[\"\']\+.+?\+[\"\'].+?[\"\']''',
      #   secret = "(optional char)${PLACEHOLDER}(optional text)"
      #   secret = "(optional char)#{PLACEHOLDER}(optional text)"
      #   secret = "FOO_BAR=($|#){PLACEHOLDER}(optional text)"
      '''(?i)(secret|password)(_|-)?(key)?[\"\']?(\s+)?[:=](\s+)?[\"\']((?-i)[A-Z_]{6,})?(.)?[\$|#]\{.{4,}?\}.*?[\"\']''',
      #   secret = "SOME_CONSTANT_PREFIX_${PLACEHOLDER}"
      #   secret = "/SOME/path:${PLACEHOLDER}"
      #   secret = "/SOME/path:${PLACEHOLDER}${PLACEHOLDER}"
      '''(?i)(secret|password)(_|-)?(key)?[\"\']?(\s+)?[:=](\s+)?[\"\'][a-z\-\_\/\:]{4,}\$\{[a-z\_\.\$\{\}]{4,}?\}[\"\']''',
      #   secret = "$SOME_ENV_VARIABLE-optional-text"
      #   secret = "\$SOME_ENV_VARIABLE-optional-text"
      '''(?i)(secret|password)(_|-)?(key)?[\"\']?(\s+)?[:=](\s+)?[\"\'](?-i)(\\)?\$[A-Z][0-9A-Z_]{4,}[\w\-]*?[\"\']''',
      # Known full placeholder passwords
      '''(?i)(secret|password)(_|-)?(key)?[\"\']?(\s+)?[:=](\s+)?[\"\'](ask|redhat)[\"\']''',
      # Base64 encoded EXAMPLE in the text
      '''(?i)(secret|password)(_|-)?(key)?[\"\']?(\s+)?[:=](\s+)?[\"\'][^\"\']*?(RVhBTVBMR|VYQU1QTEU|FWEFNUExF)[^\"\']*?[\"\']''',
      # aws.* is already covered by a different rule
      '''(?i)aws(.{0,15})(secret|password)(_|-)?(key)?[\"\']?(\s+)?[:=](\s+)?[\"\']([^\"\s]+?)[\"\']''',
      # jq lookups
      '''jq\s+([\w\-\s]+)?.*\.\w*(secret|password)(_|-)?(key)?''',
      # A common false positive for passwords and secrets (e.g. password = "update-your-postgres-pass-here")
      '''(?i)(secret|password)(_|-)?(key)?[\"\']?(\s+)?[:=](\s+)?[\"\'](?-i).+?[a-z]{2,}-[a-z]{2,}-[a-z]{2,}.+?[\"\']''',
      # Various words at the start and end that signify a placeholder
      '''(?i)(?i)(secret|password)(_|-)?(key)?[\"\']?(\s+)?[:=](\s+)?[\"\'](&lt;|\\u201c|\\u003c|\$)?(\/etc\/|data\/|\/path\/|(\/var)?\/run\/|(0)?12345|abc(d|12)|admin|ansible|auto|bool:|capi-openstack|change|client|confirm|contrase|demo|dict|django-insecure-|example|(ENC\[|RU5DW|VOQ|FTk)|enter_|fake|false|file:|fixme|grub|http(s)?:\/\/|installation_prefix|invalid|libvirt|none|not|placeholder|pass(w)?(o|0)?(r)?(d|t)(!)?|provide|path|quickstart|replace|sample|(my)?secret|self|spec\.|str:|(my)?t(e)?mp|test|this|update|value|your_)(.+?)?[\"\']''',
      '''(?i)(?i)(secret|password)(_|-)?(key)?[\"\']?(\s+)?[:=](\s+)?[\"\'][^\'\"]*?(\.((jp(e)?g)|png|svg|txt|yaml|tmpl)|-auth(entication)?|-cert(ification)?(s)?|-demo|(-|_)key|-tls|_id|_private|(0)?12345(6)?|client|(change|fix)me|config(uration)?|cred(ential)?(s)?|data|default|devel(opment)|example(.com|key)?|hash|here|json|(_|-)pwd|placeholder|pass((w)?(o|0)?(r)?(d|t)(!)?)?|raw\(|registry|required|secret(s|_v\d)?|string|test|token|uuid|value|xxxxx|y(a)?ml)(&gt;|\\u003e)?[\"\']''',
      # Ignore things that look like UUIDs (So far these have more often referenced secrets rather than being them)
      '''(?i)(secret|password)(_|-)?(key)?[\"\']?(\s+)?[:=](\s+)?[\"\'](?-i)[0-9a-z]{8}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{12}[\"\']''',
    ]

[[rules]]
  description = "General Secret"
  regex = '''(?i)<(\s+)?(\w+)?password([\s\w\"\'=]+)?>([^\"\s]+?)<\/'''
  tags = ["alert:repo-owner", "key", "password", "general", "type:secret"]

  [rules.allowlist]
    paths = [
      # Usually a project not owned by the user that has a lot of FPs for us when
      # folks fork it. But make sure to include the azure-cli aro modules
      '/azure-(cli.+\/command_modules\/([^a]|a[^r])|sdk-for-python\/|rest-api-specs\/|docs\/)',
    ]
    regexes = [
      # Things like <password>$SOME_ENV_VARIABLE</password>
      '''(?i)<(\s+)?(\w+)?password([\s\w\"\'=]+)?>(<!\[CDATA\[)?(?-i)\$[A-Z][0-9A-Z_]+(\]\]>)?<\/''',
      # Things like <password>${SOME_VARIABLE}</password>
      '''(?i)<(\s+)?(\w+)?password([\s\w\"\'=]+)?>(<!\[CDATA\[)?\$\{.+?\}(\]\]>)?<\/''',
      # Things like <password>$SomeVariable$</password>
      '''(?i)<(\s+)?(\w+)?password([\s\w\"\'=]+)?>(<!\[CDATA\[)?\$\w+?\$(\]\]>)?<\/''',
      # Things like <password>$(SOME_VARIABLE)</password>
      '''(?i)<(\s+)?(\w+)?password([\s\w\"\'=]+)?>(<!\[CDATA\[)?\$\(.+?\)(\]\]>)?<\/''',
      # Things like <password>{SOME_VARIABLE}</password>
      '''(?i)<(\s+)?(\w+)?password([\s\w\"\'=]+)?>(<!\[CDATA\[)?\{.+?\}(\]\]>)?<\/''',
      # Various words at the start and end that signify a placeholder
      '''(?i)<(\s+)?(\w+)?password([\s\w\"\'=]+)?>(<!\[CDATA\[)?(&lt;|\\u201c|\\u003c|\$)?(\/etc\/|data\/|\/path\/|(\/var)?\/run\/|(0)?12345|abc(d|12)|admin|ansible|auto|bool:|capi-openstack|change|client|confirm|contrase|demo|dict|django-insecure-|example|(ENC\[|RU5DW|VOQ|FTk)|enter_|fake|false|file:|fixme|grub|http(s)?:\/\/|installation_prefix|invalid|libvirt|none|not|placeholder|pass(w)?(o|0)?(r)?(d|t)(!)?|provide|path|quickstart|replace|sample|(my)?secret|self|spec\.|str:|(my)?t(e)?mp|test|this|update|value|your_)(.+?)?(\]\]>)?<\/''',
      '''(?i)<(\s+)?(\w+)?password([\s\w\"\'=]+)?>(<!\[CDATA\[)?[^<]+?(\.((jp(e)?g)|png|svg|txt|yaml|tmpl)|-auth(entication)?|-cert(ification)?(s)?|-demo|(-|_)key|-tls|_id|_private|(0)?12345(6)?|client|(change|fix)me|config(uration)?|cred(ential)?(s)?|data|default|devel(opment)|example(.com|key)?|hash|here|json|(_|-)pwd|placeholder|pass((w)?(o|0)?(r)?(d|t)(!)?)?|raw\(|registry|required|secret(s|_v\d)?|string|test|token|uuid|value|xxxxx|y(a)?ml)(&gt;|\\u003e)?(\]\]>)?<\/''',
    ]

  [[rules.entropies]]
    Min = "3.35"
    Max = "8"
    Group = "4"

[[rules]]
  description = "General Secret"
  regex = '''(?i)<(\s+)?(\w+)?secret([\s\w\"\'=]+)?>([^\"\s]+?)<\/'''
  tags = ["alert:repo-owner", "key", "secret", "general", "type:secret"]

  [rules.allowlist]
    paths = [
      # Usually a project not owned by the user that has a lot of FPs for us when
      # folks fork it. But make sure to include the azure-cli aro modules
      '/azure-(cli.+\/command_modules\/([^a]|a[^r])|sdk-for-python\/|rest-api-specs\/|docs\/)',
    ]
    regexes = [
      # Things like <secret>$SOME_ENV_VARIABLE</secret>
      '''(?i)<(\s+)?(\w+)?secret([\s\w\"\'=]+)?>(<!\[CDATA\[)?(?-i)\$[A-Z][0-9A-Z_]+(\]\]>)?<\/''',
      # Things like <secret>${SOME_VARIABLE}</secret>
      '''(?i)<(\s+)?(\w+)?secret([\s\w\"\'=]+)?>(<!\[CDATA\[)?\$\{.+?\}(\]\]>)?<\/''',
      # Things like <secret>$(SOME_VARIABLE)</secret>
      '''(?i)<(\s+)?(\w+)?secret([\s\w\"\'=]+)?>(<!\[CDATA\[)?\$\(.+?\)(\]\]>)?<\/''',
      # Things like <secret>{SOME_VARIABLE}</secret>
      '''(?i)<(\s+)?(\w+)?secret([\s\w\"\'=]+)?>(<!\[CDATA\[)?\{.+?\}(\]\]>)?<\/''',
      # Various words at the start and end that signify a placeholder
      '''(?i)<(\s+)?(\w+)?secret([\s\w\"\'=]+)?>(<!\[CDATA\[)?(&lt;|\\u201c|\\u003c|\$)?(\/etc\/|data\/|\/path\/|(\/var)?\/run\/|(0)?12345|abc(d|12)|admin|ansible|auto|bool:|capi-openstack|change|client|confirm|contrase|demo|dict|django-insecure-|example|(ENC\[|RU5DW|VOQ|FTk)|enter_|fake|false|file:|fixme|grub|http(s)?:\/\/|installation_prefix|invalid|libvirt|none|not|placeholder|pass(w)?(o|0)?(r)?(d|t)(!)?|provide|path|quickstart|replace|sample|(my)?secret|self|spec\.|str:|(my)?t(e)?mp|test|this|update|value|your_)(.+?)?(\]\]>)?<\/''',
      '''(?i)<(\s+)?(\w+)?secret([\s\w\"\'=]+)?>(<!\[CDATA\[)?[^<]+?(\.((jp(e)?g)|png|svg|txt|yaml|tmpl)|-auth(entication)?|-cert(ification)?(s)?|-demo|(-|_)key|-tls|_id|_private|(0)?12345(6)?|client|(change|fix)me|config(uration)?|cred(ential)?(s)?|data|default|devel(opment)|example(.com|key)?|hash|here|json|(_|-)pwd|placeholder|pass((w)?(o|0)?(r)?(d|t)(!)?)?|raw\(|registry|required|secret(s|_v\d)?|string|test|token|uuid|value|xxxxx|y(a)?ml)(&gt;|\\u003e)?(\]\]>)?<\/''',
      # UUIDs
      '''(?i)<(\s+)?(\w+)?secret([\s\w\"\'=]+)?>(<!\[CDATA\[)?(?-i)[0-9a-z]{8}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{12}(\]\]>)?<\/''',
    ]

  [[rules.entropies]]
    Min = "3.35"
    Max = "8"
    Group = "4"

[[rules]]
  description = "GitHub Fine-Grained Personal Access Token"
  regex = '''(github_pat_\w{82})'''
  tags = ["alert:repo-owner", "key", "github", "fine-grained", "access", "token", "type:secret"]

  [[rules.entropies]]
    Min = "2"
    Max = "8"
    Group = "1"

[[rules]]
  description = "GitHub Personal Access Token"
  regex = '''(ghp_[0-9A-Za-z]{36,})'''
  tags = ["alert:repo-owner", "key", "github", "personal", "token", "type:secret"]

  [[rules.entropies]]
    Min = "2"
    Max = "8"
    Group = "1"

[[rules]]
  description = "GitHub OAuth Access Token"
  regex = '''(gho_[0-9A-Za-z]{36,})'''
  tags = ["alert:repo-owner", "key", "github", "oauth", "token", "type:secret"]

  [[rules.entropies]]
    Min = "2"
    Max = "8"
    Group = "1"

[[rules]]
  description = "GitHub User to Server Token"
  regex = '''(ghu_[0-9A-Za-z]{36,})'''
  tags = ["alert:repo-owner", "key", "github", "user-to-server", "token", "type:secret"]

  [[rules.entropies]]
    Min = "2"
    Max = "8"
    Group = "1"

[[rules]]
  description = "GitHub Server to Server Token"
  regex = '''(ghs_[0-9A-Za-z]{36,})'''
  tags = ["alert:repo-owner", "key", "github", "server-to-server", "token", "type:secret"]

  [[rules.entropies]]
    Min = "2"
    Max = "8"
    Group = "1"

[[rules]]
  description = "GitHub Refresh Token"
  regex = '''(ghr_[0-9A-Za-z]{36,})'''
  tags = ["alert:repo-owner", "key", "github", "refresh", "token", "type:secret"]

  [[rules.entropies]]
    Min = "2"
    Max = "8"
    Group = "1"

[[rules]]
  description = "GitLab Access Token"
  regex = '''(glpat-[\w\-]{20})'''
  tags = ["alert:repo-owner", "key", "gitlab", "access", "token", "type:secret"]

  [[rules.entropies]]
    Min = "2"
    Max = "8"
    Group = "1"

[[rules]]
  description = "GitLab Pipeline Trigger Token"
  regex = '''(glptt-[0-9a-f]{40})'''
  tags = ["alert:repo-owner", "key", "gitlab", "pipeline", "trigger", "token", "type:secret"]

  [[rules.entropies]]
    Min = "2"
    Max = "8"
    Group = "1"

[[rules]]
  description = "GitLab Runner Registration Token"
  regex = '''((glrt-|GR1348941)[\w\-]{20})'''
  tags = ["alert:repo-owner", "key", "gitlab", "runner", "registration", "token", "type:secret"]

  [[rules.entropies]]
    Min = "2"
    Max = "8"
    Group = "1"

[[rules]]
  description = "PayPal Braintree Access Token"
  regex = '''access_token\$production\$[0-9a-z]{16}\$[0-9a-f]{32}'''
  tags = ["alert:repo-owner", "key", "paypal", "type:secret"]

[[rules]]
  description = "Picatic API Key"
  regex = '''sk_live_[0-9a-z]{32}'''
  tags = ["alert:repo-owner", "key", "picatic", "type:secret"]

[[rules]]
  description = "PyPI Upload Token"
  regex = '''pypi-AgEIcHlwaS5vcmc[A-Za-z0-9-_]{50,1000}'''
  tags = ["alert:repo-owner", "key", "pypi", "type:secret"]

[[rules]]
  description = "SendGrid API Key"
  regex = '''[^\w]SG\.[\w\-]{16,32}\.[\w\-]{16,64}'''
  tags = ["alert:repo-owner", "key", "sendgrid", "type:secret"]

[[rules]]
  description = "Shopify Access Token"
  regex = '''shpat_[a-fA-F0-9]{32}'''
  tags = ["alert:repo-owner", "key", "shopify", "type:secret"]

[[rules]]
  description = "Shopify Custom App Access Token"
  regex = '''shpca_[a-fA-F0-9]{32}'''
  tags = ["alert:repo-owner", "key", "shopify", "type:secret"]

[[rules]]
  description = "Shopify Private App Access Token"
  regex = '''shppa_[a-fA-F0-9]{32}'''
  tags = ["alert:repo-owner", "key", "shopify", "type:secret"]

[[rules]]
  description = "Shopify Shared Secret"
  regex = '''shpss_[a-fA-F0-9]{32}'''
  tags = ["alert:repo-owner", "key", "shopify", "type:secret"]

[[rules]]
  description = "Slack Token"
  regex = '''xox[baprs]-([0-9a-zA-Z-]{10,48})?'''
  tags = ["alert:repo-owner", "key", "slack", "type:secret"]

  [rules.allowlist]
    regexes = [
      # Ignore placeholder values
      '''xox[baprs]-(1234|some|placeholder|slack)(.+)?''',
    ]

  [[rules.entropies]]
    Min = "3.2"
    Max = "8"
    Group = "1"

[[rules]]
  description = "Slack Webhook"
  regex = '''https://hooks.slack.com/services/(T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8,12}/[a-zA-Z0-9_]{24})'''
  tags = ["alert:repo-owner", "key", "slack", "type:secret"]

  [[rules.entropies]]
    Min = "3.2"
    Max = "8"
    Group = "1"

[[rules]]
  description = "Square Access Token"
  regex = '''sq0atp-[0-9A-Za-z\-_]{22}'''
  tags = ["alert:repo-owner", "key", "square", "type:secret"]

[[rules]]
  description = "Square OAuth Secret"
  regex = '''sq0csp-[0-9A-Za-z\\-_]{43}'''
  tags = ["alert:repo-owner", "key", "square", "type:secret"]

[[rules]]
  description = "Stripe API Key"
  regex = '''(?i)stripe(.{0,20})?[sr]k_live_[0-9a-zA-Z]{24}'''
  tags = ["alert:repo-owner", "key", "stripe", "type:secret"]

[[rules]]
  description = "Twilio API Key"
  regex = '''(?i)twilio(.{0,20})?SK[0-9a-f]{32}'''
  tags = ["alert:repo-owner", "key", "twilio", "type:secret"]

[[rules]]
  description = "WP-Config"
  regex='''define(\s+)?\((\s+)?[\"\'](DB_HOST|DB_NAME|DB_USER|DB_PASSWORD|AUTH_KEY|SECURE_AUTH_KEY|LOGGED_IN_KEY|NONCE_KEY|AUTH_SALT|SECURE_AUTH_SALT|LOGGED_IN_SALT|NONCE_SALT)[\"\'](\s+)?,(\s+)?[\"\'](.+?)[\"\'](\s+)?\)'''
  tags = ["alert:repo-owner", "key", "credential", "wordpress", "type:secret"]

  [rules.allowlist]
    regexes = [
      '''define(\s+)?\((\s+)?[\"\'](.+?)[\"\'](\s+)?,(\s+)?[\"\']<.+?>[\"\'](\s+)?\)''',
      '''define(\s+)?\((\s+)?[\"\'](.+?)[\"\'](\s+)?,(\s+)?[\"\']\{\{.+?\}\}[\"\'](\s+)?\)''',
      '''define(\s+)?\((\s+)?[\"\'](.+?)[\"\'](\s+)?,(\s+)?[\"\']\$\{.+?\}[\"\'](\s+)?\)''',
      # Ignore some placeholder values
      '''define(\s+)?\((\s+)?[\"\'](.+?)[\"\'](\s+)?,(\s+)?[\"\']([^\'\"]+)?(-auth(entication)?|example(.com|key)?|here|localhost|pass(w)?or(d|t)|required|secret(s|_v\d)?|string|test)[\"\'](\s+)?\)''',
    ]
