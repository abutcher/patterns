[allowlist]
  description = "Global Allowlist"
  paths = [
    '''Godeps''',
    '''gems\/''',
    '''node_modules''',
    '''vendor''',
    # Quickstarts are FP heavy
    '''quickstart''',
    # Handle a lot of the github/docs cases
    '''lib\/rest\/static\/.+\/((.+)?github.+\.json|ghes.+\.json)''',
    # Ignore checked-in python packages
    '''lib/python[^/]+/site-packages''',
  ]
  files = [
    '''(.*?)(png|jpg|gif|doc|docx|pdf|bin|xls|pyc|zip|css)$''',
    '''(go.mod|go.sum)$''',
    '''^\.?gitleaks.toml$''',
    '''^\.?secrets.baseline$''',
  ]

[[rules]]
  description = "Asymmetric Private Key"
  regex = '''-----BEGIN ((EC|PGP|DSA|RSA|OPENSSH) )?PRIVATE KEY( BLOCK)?-----'''
  tags = ["alert:repo-owner", "key", "asymmetric-private-key"]

  [rules.allowlist]
    paths = [
      # Ignore common test certs
      '''test(s)?\/[\w\-]+.pem$''',
    ]

    regexes = [
      # Anything less than 15 characters
      '''PRIVATE KEY( BLOCK)?-----.{0,15}-----END''',
      # The key has spaces in it so it's probably a placeholder
      '''PRIVATE KEY( BLOCK)?-----.*(\s).*-----END''',
    ]

[[rules]]
  description = "AWS Access Key"
  # Assumes there's at least one non uppercase letter or number before the key
  # to help avoid thinking things in the middle of hashes are keys.
  regex = '''[^A-Z0-9](A3T[A-Z0-9]|AKIA|AGPA|AIDA|AIPA|ANPA|ANVA|ASIA)([A-Z0-9]{16})'''
  tags = ["alert:repo-owner", "key", "aws"]

  [rules.allowlist]
    regexes = ['''EXAMPLE''']

  [[rules.entropies]]
    Min = "3.2"
    Max = "8"
    Group = "2"

[[rules]]
  description = "AWS MWS Key"
  regex = '''amzn\.mws\.[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'''
  tags = ["alert:repo-owner", "key", "aws", "mws"]

[[rules]]
  # Might merge this with AWS Secret Key if the quality is good
  # (other rule|this new rule)
  description = "Potential AWS Secret Key"
  regex = '''(?i)[^a-z0-9\/+=\.\-<>_;]([a-z0-9\/+=]{40})([^a-z0-9\/+=\.\-<>_]|$)'''
  # Update alert tags and remove "testing" tag when ready
  # May set this up to never alert users directly but instead feed it
  # to a cred checker tool if we can't get a higher number of true positives.
  tags = ["group:leaktk-testing", "key", "aws"]

  [[rules.entropies]]
    Min = "4.2"
    Max = "8"
    Group = "1"

  [rules.allowlist]
    regexes = [
      # kind of a sanity check to cut down fps in the initial round of testing
      '''(?i)[^a-z0-9\/+=\.\-<>_;]([a-z]{40}|[a-z]{0,39}\d[a-z]{0,39})([^a-z0-9\/+=\.\-<>_]|$)''',
      # It must have at least 1 upper and lower case character
      '''[^A-Za-z0-9\/+=\.\-<>_;]([a-z0-9\/+=]{40}|[A-Z0-9\/+=]{40})([^a-z0-9\/+=\.\-<>_]|$)''',
      # Things then end in == often seem to be just base64 encoded values or keys not realted to AWS
      '''[^A-Za-z0-9\/+=\.\-<>_;][A-Za-z0-9\/+=]{38}==([^A-Za-z0-9\/+=\.\-<>_]|$)''',
      # Ignore placeholders
      # Note: this runs the risk of missing real keys if everything is one line and there's a match elsewhere
      # but it cuts out so many FPs it may be worth it.
      '''(?i)[^a-z0-9\/+=\.\-<>_;][a-z0-9\/+=]{0,40}(example|abcd|1234|org|java|algo|repo|exec|share|param|temp|path|dist|linux|test|base|com|api|name|type|attr|xxx|auth)[a-z0-9\/+=]{0,40}([^a-z0-9\/+=\.\-<>_]|$)''',
    ]

[[rules]]
  description = "AWS Secret Key"
  regex = '''(?i)aws([^:=(,\s]{0,20})?(\s+)?[:=(](\s+)?(?-i)['\"]?([A-Za-z0-9\/+]{40})['\"]?'''
  tags = ["alert:repo-owner", "key", "aws"]

  [rules.allowlist]
    regexes = [
      '''arn:aws:iam:''',
      # Ignore common placeholders
      '''(?i)aws([^:=(,\s]{0,20})?(\s+)?[:=(](\s+)?(?-i)['\"]?.*(EXAMPLE|ABCDEF|abcdef).*['\"]?''',
    ]

  [[rules.entropies]]
    Min = "4"
    Max = "8"
    Group = "4"

[[rules]]
  description = "Container Registry Authentication"
  # Example match: registry.New("registry", "username", "password")
  regex = '''registry\.New\((\s+)?\"[^\"]+\",(\s+)?\"[^\"]+\",(\s+)?(\"[^\"]+\")(\s+)?\)'''
  tags = ["alert:repo-owner", "key", "container-registry"]

  [[rules.entropies]]
    Min = "0"
    Max = "8"
    Group = "4"

[[rules]]
  # This replaces HTTP Basic Auth after the testing period is over
  description = "Basic Auth Password"
  regex = ''':\/\/([^:\/\s\"\']+)?:([^@\/\s]{3,})@[\w\.\-]+'''
  tags = ["group:leaktk-testing", "password", "basic-auth"]
  # Update alert tags and remove "testing" tag when ready
  # May set this up to never alert users directly but instead feed it
  # to a cred checker tool if we can't get a higher number of true positives.

  [[rules.entropies]]
    Min = "2.4"
    Max = "8"
    Group = "2"

  [rules.allowlist]
    paths = [
      # Usually a project not owned by the user that has a lot of FPs for us when
      # folks fork it
      '/azure-cli/',
    ]
    regexes = [
      # Things like: https://user:<pass>@host
      '''(?i):\/\/([^:\/\s\"\']+)?:<[^@\/\s]+>@[\w\.\-]+''',
      # Things like: https://user:%pass%@host
      '''(?i):\/\/([^:\/\s\"\']+)?:%[^@\/\s]+%@[\w\.\-]+''',
      # Things like: https://user:${pass}@host
      '''(?i):\/\/([^:\/\s\"\']+)?:(\")?\$\{[^@\/\s]+\}(\")?@[\w\.\-]+''',
      # Things like: https://user:{pass}@host
      '''(?i):\/\/([^:\/\s\"\']+)?:\{[^@\/\s]+\}@[\w\.\-]+''',
      # Things like: https://user:[pass]@host
      '''(?i):\/\/([^:\/\s\"\']+)?:\[[^@\/\s]+\]@[\w\.\-]+''',
      # Things like: https://user:${pass}@host
      # Things like: https://user:\${pass}@host
      '''(?i):\/\/([^:\/\s\"\']+)?:(\\)?\$\{[^@\/\s]+\}@[\w\.\-]+''',
      # Things like: https://user:$(pass)@host
      '''(?i):\/\/([^:\/\s\"\']+)?:\$\([^@\/\s]+\)@[\w\.\-]+''',
      # Things like: https://user:#{pass}@host
      '''(?i):\/\/([^:\/\s\"\']+)?:\#\{[^@\/\s]+\}@[\w\.\-]+''',
      # Things like: https://user:$SOME_ENV_VARIABLE-optional-text@host
      '''(?i):\/\/([^:\/\s\"\']+)?:(?-i)\$[A-Z][0-9A-Z_]{4,}([\w\-]+)?@[\w\.\-]+''',
      # Various words at the start and end that signify a placeholder
      '''(?i):\/\/([^:\/\s\"\']+)?:(\/path\/|(\/var)?\/run\/|(0)?123456789|abcdef|admin|ansible|auto|bool:|capi-openstack|change|client|confirm|demo|dict|django-insecure-|example|enter_|file:|grub|invalid|libvirt|none|not|placeholder|pass(w)?(o|0)?(r)?(d|t)(\!)?|provide|path|quickstart|replace|sample|(my)?secret|self|str:|(my)?t(e)?mp|test|this|update|value|your_)(.+?)?@[\w\.\-]+''',
      '''(?i):\/\/([^:\/\s\"\']+)?:.+?(\.((jp(e)?g)|png|svg|txt)|-auth(entication)?|-cert(ification)?(s)?|-oauth-basic|-demo|(-|_)key|-tls|_id|_private|(0)?12345(6)?|client|changeme|config(uration)?|cred(ential)?(s)?|data|example(.com|key)?|here|json|_pwd|pass(w)?(o|0)?(r)?(d|t)(\!)?|raw\(|registry|required|secret(s|_v\d)?|string|test|token|value|y(a)?ml)@[\w\.\-]+''',
    ]

[[rules]]
  description = "HTTP Basic Auth Password"
  regex = '''http(s)?:\/\/([^:\/\s\"\']+)?:([^@\/\s]{3,})@[\w\.\-]+'''
  tags = ["alert:repo-owner", "password", "http-basic-auth"]

  [[rules.entropies]]
    Min = "2.4"
    Max = "8"
    Group = "3"

  [rules.allowlist]
    paths = [
      # Usually a project not owned by the user that has a lot of FPs for us when
      # folks fork it
      '/azure-cli/',
    ]
    regexes = [
      # Things like: https://user:<pass>@host
      '''(?i)http(s)?:\/\/([^:\/\s\"\']+)?:<[^@\/\s]+>@[\w\.\-]+''',
      # Things like: https://user:%pass%@host
      '''(?i)http(s)?:\/\/([^:\/\s\"\']+)?:%[^@\/\s]+%@[\w\.\-]+''',
      # Things like: https://user:${pass}@host
      '''(?i)http(s)?:\/\/([^:\/\s\"\']+)?:(\")?\$\{[^@\/\s]+\}(\")?@[\w\.\-]+''',
      # Things like: https://user:{pass}@host
      '''(?i)http(s)?:\/\/([^:\/\s\"\']+)?:\{[^@\/\s]+\}@[\w\.\-]+''',
      # Things like: https://user:[pass]@host
      '''(?i)http(s)?:\/\/([^:\/\s\"\']+)?:\[[^@\/\s]+\]@[\w\.\-]+''',
      # Things like: https://user:${pass}@host
      # Things like: https://user:\${pass}@host
      '''(?i)http(s)?:\/\/([^:\/\s\"\']+)?:(\\)?\$\{[^@\/\s]+\}@[\w\.\-]+''',
      # Things like: https://user:$(pass)@host
      '''(?i)http(s)?:\/\/([^:\/\s\"\']+)?:\$\([^@\/\s]+\)@[\w\.\-]+''',
      # Things like: https://user:#{pass}@host
      '''(?i)http(s)?:\/\/([^:\/\s\"\']+)?:\#\{[^@\/\s]+\}@[\w\.\-]+''',
      # Things like: https://user:$SOME_ENV_VARIABLE-optional-text@host
      '''(?i)http(s)?:\/\/([^:\/\s\"\']+)?:(?-i)\$[A-Z][0-9A-Z_]{4,}([\w\-]+)?@[\w\.\-]+''',
      # Various words at the start and end that signify a placeholder
      '''(?i)http(s)?:\/\/([^:\/\s\"\']+)?:(\/path\/|(\/var)?\/run\/|(0)?123456789|abcdef|admin|ansible|auto|bool:|capi-openstack|change|client|confirm|demo|dict|django-insecure-|example|enter_|file:|grub|invalid|libvirt|none|not|placeholder|pass(w)?(o|0)?(r)?(d|t)(\!)?|provide|path|quickstart|replace|sample|(my)?secret|self|str:|(my)?t(e)?mp|test|this|update|value|your_)(.+?)?@[\w\.\-]+''',
      '''(?i)http(s)?:\/\/([^:\/\s\"\']+)?:.+?(\.((jp(e)?g)|png|svg|txt)|-auth(entication)?|-cert(ification)?(s)?|-oauth-basic|-demo|(-|_)key|-tls|_id|_private|(0)?12345(6)?|client|changeme|config(uration)?|cred(ential)?(s)?|data|example(.com|key)?|here|json|_pwd|pass(w)?(o|0)?(r)?(d|t)(\!)?|raw\(|registry|required|secret(s|_v\d)?|string|test|token|value|y(a)?ml)@[\w\.\-]+''',
    ]

[[rules]]
  description = "Dynatrace Token"
  regex = '''dt0[a-zA-Z]{1}[0-9]{2}\.[A-Z0-9]{24}\.[A-Z0-9]{64}'''
  tags = ["alert:repo-owner", "key", "dynatrace"]

[[rules]]
  description = "Facebook Secret Key"
  regex = '''(?i)(facebook)([0-9A-Za-z_-]{0,20})?(\s+)?[:|=|(](\s+)?(?-i)['\"]?[0-9a-f]{32}['\"]?'''
  tags = ["alert:repo-owner", "key", "facebook"]

[[rules]]
  description = "Google API Key"
  regex = '''AIza[0-9A-Za-z\\-_]{35}([^0-9A-Za-z\\-_]|$)'''
  tags = ["alert:repo-owner", "key", "google"]

[[rules]]
  description = "Heroku API Key"
  regex = '''(?i)heroku(.{0,20})?[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'''
  tags = ["alert:repo-owner", "key", "heroku"]

[[rules]]
  description = "Htpasswd Files"
  file = '''htpasswd'''
  regex = '''.+?:([^\s]+)'''
  tags = ["alert:repo-owner", "key", "password", "general"]

  [rules.allowlist]
    regexes = [
      # Ignore comments
      '''^(\s+)?#''',
    ]
    files = [
      # Ignore these file extensions with htpasswd in the name
      '''(.+?).(c|go|java|js|py|rb|yml|yaml)$''',
    ]

  [[rules.entropies]]
    Min = "4"
    Max = "8"
    Group = "1"

[[rules]]
  description = "MailChimp API Key"
  regex = '''(?i)(mailchimp|mc)(.{0,20})?[0-9a-f]{32}-us[0-9]{1,2}'''
  tags = ["alert:repo-owner", "key", "mailchimp"]

[[rules]]
  description = "Mailgun API Key"
  regex = '''((?i)(mailgun|mg)(.{0,20})?)key-[0-9a-z]{32}'''
  tags = ["alert:repo-owner", "key", "mailgun"]

[[rules]]
  description = "General Secret"
  regex = '''(?i)["\']?password["\']?(\s+)?[:=](\s+)?["\']([^\"\s]+?)["\']'''
  tags = ["alert:repo-owner", "key", "password", "general"]

  [rules.allowlist]
    paths = [
      # Usually a project not owned by the user that has a lot of FPs for us when
      # folks fork it
      '/azure-cli/',
    ]
    regexes = [
      # Things like: password = "asdfasdfas" # nosec (used by bandit)
      '''#(\s+)?nosec(\s+|$)''',
      # Things like: password = ""
      '''(?i)["\']?password["\']?(\s+)?[:=](\s+)?["\']["\']''',
      # Things like: password = "<PLACEHOLDER>"
      '''(?i)["\']?password["\']?(\s+)?[:=](\s+)?["\']<.+?>["\']''',
      # Things like: password = "@@PLACEHOLDER@@"
      '''(?i)["\']?password["\']?(\s+)?[:=](\s+)?["\']@@.+?@@["\']''',
      # Things like: "password: ").append("foo")
      '''(?i)["\']?password["\']?(\s+)?[:=](\s+)?["\']\).+?\(["\']''',
      # Things like: "password="+some_var+"asdfa"
      '''(?i)["\']?password["\']?(\s+)?[:=](\s+)?["\']\+.+?\+["\'].+?["\']''',
      # Things like: "password="`+some_var+`"
      '''(?i)["\']?password["\']?(\s+)?[:=](\s+)?["\']`\+.+?\+`["\']''',
      # Things like: password = "%PLACEHOLDER%"
      '''(?i)["\']?password["\']?(\s+)?[:=](\s+)?["\']%.+?%["\']''',
      # Things like: password = "(optional char)${PLACEHOLDER}(optional text)"
      '''(?i)["\']?password["\']?(\s+)?[:=](\s+)?["\'](.)?\$\{.+?\}(.+)?["\']''',
      # Things like: password = "SOME_CONSTANT_PREFIX_${PLACEHOLDER}"
      '''(?i)["\']?password["\']?(\s+)?[:=](\s+)?["\'](?-i)[A-Z_]{9,}\$\{.{4,}?\}["\']''',
      # Things like: password = "#{PLACEHOLDER}"
      '''(?i)["\']?password["\']?(\s+)?[:=](\s+)?["\']#\{.+?\}["\']''',
      # Things like: password = "$(PLACEHOLDER)"
      # Or like: password = "\$(PLACEHOLDER)"
      '''(?i)["\']?password["\']?(\s+)?[:=](\s+)?["\'](\\)?\$\(.+?\)["\']''',
      # Things like: password = "[%PLACEHOLDER%]"
      '''(?i)["\']?password["\']?(\s+)?[:=](\s+)?["\']\[%.+?%\]["\']''',
      # Things like: password = "{PLACEHOLDER}"
      # Things like: password = "%{PLACEHOLDER}"
      '''(?i)["\']?password["\']?(\s+)?[:=](\s+)?["\'](%)?\{.+?\}["\']''',
      # Things like password = "$SOME_ENV_VARIABLE-optional-text"
      # Things like password = "\$SOME_ENV_VARIABLE-optional-text"
      '''(?i)["\']?password["\']?(\s+)?[:=](\s+)?["\'](?-i)(\\)?\$[A-Z][0-9A-Z_]{4,}([\w\-]+)?["\']''',
      # Things like password = "https://${SOME_PLACEHOLDER}/foo/bar/baz"
      '''(?i)["\']?password["\']?(\s+)?[:=](\s+)?["\']https:\/\/\$\{.+?\}.+?["\']''',
      # Things like password = "ask"
      '''(?i)["\']?password["\']?(\s+)?[:=](\s+)?["\']ask["\']''',
      # A common false positive for passwords and secrets (e.g. password = "update-your-postgres-pass-here")
      '''(?i)["\']?password["\']?(\s+)?[:=](\s+)?["\'](?-i).+?[a-z]{2,}-[a-z]{2,}-[a-z]{2,}.+?["\']''',
      # Various words at the start and end that signify a placeholder
      '''(?i)["\']?password["\']?(\s+)?[:=](\s+)?["\'](\/path\/|(\/var)?\/run\/|(0)?123456789|abcdef|admin|ansible|auto|bool:|capi-openstack|change|client|confirm|demo|dict|django-insecure-|example|enter_|file:|grub|invalid|libvirt|none|not|placeholder|pass(w)?(o|0)?(r)?(d|t)(\!)?|provide|path|quickstart|replace|sample|(my)?secret|self|str:|(my)?t(e)?mp|test|this|update|value|your_)(.+?)?["\']''',
      '''(?i)["\']?password["\']?(\s+)?[:=](\s+)?["\'][^\'\"]+?(\.((jp(e)?g)|png|svg|txt)|-auth(entication)?|-cert(ification)?(s)?|-demo|(-|_)key|-tls|_id|_private|(0)?12345(6)?|client|changeme|config(uration)?|cred(ential)?(s)?|data|example(.com|key)?|here|json|_pwd|pass(w)?(o|0)?(r)?(d|t)(\!)?|raw\(|registry|required|secret(s|_v\d)?|string|test|token|value|y(a)?ml)["\']''',
    ]

  [[rules.entropies]]
    Min = "3.35"
    Max = "8"
    Group = "3"

[[rules]]
  description = "General Secret"
  regex = '''(?i)<(\s+)?(\w+)?password([\s\w\"\'=]+)?>([^\"\s]+?)<\/'''
  tags = ["alert:repo-owner", "key", "password", "general"]

  [rules.allowlist]
    paths = [
      # Usually a project not owned by the user that has a lot of FPs for us when
      # folks fork it
      '/azure-cli/',
    ]
    regexes = [
      # Things like <password>$SOME_ENV_VARIABLE</password>
      '''(?i)<(\s+)?(\w+)?password([\s\w\"\'=]+)?>(?-i)\$[A-Z][0-9A-Z_]+<\/''',
      # Things like <password>${SOME_VARIABLE}</password>
      '''(?i)<(\s+)?(\w+)?password([\s\w\"\'=]+)?>\$\{.+?\}<\/''',
      # Things like <password>$(SOME_VARIABLE)</password>
      '''(?i)<(\s+)?(\w+)?password([\s\w\"\'=]+)?>\$\(.+?\)<\/''',
      # Things like <password>{SOME_VARIABLE}</password>
      '''(?i)<(\s+)?(\w+)?password([\s\w\"\'=]+)?>\{.+?\}<\/''',
      # Various words at the start and end that signify a placeholder
      '''(?i)<(\s+)?(\w+)?password([\s\w\"\'=]+)?>(\/path\/|(\/var)?\/run\/|(0)?123456789|abcdef|admin|ansible|auto|bool:|capi-openstack|change|client|confirm|demo|dict|django-insecure-|example|enter_|file:|grub|invalid|libvirt|none|not|placeholder|pass(w)?(o|0)?(r)?(d|t)(\!)?|provide|path|quickstart|replace|sample|(my)?secret|self|str:|(my)?t(e)?mp|test|this|update|value|your_)(.+?)?<\/''',
      '''(?i)<(\s+)?(\w+)?password([\s\w\"\'=]+)?>[^<]+?(\.((jp(e)?g)|png|svg|txt)|-auth(entication)?|-cert(ification)?(s)?|-demo|(-|_)key|-tls|_id|_private|(0)?12345(6)?|client|changeme|config(uration)?|cred(ential)?(s)?|data|example(.com|key)?|here|json|_pwd|pass(w)?(o|0)?(r)?(d|t)(\!)?|raw\(|registry|required|secret(s|_v\d)?|string|test|token|value|y(a)?ml)<\/''',
    ]

  [[rules.entropies]]
    Min = "3.35"
    Max = "8"
    Group = "4"

[[rules]]
  description = "General Secret"
  regex = '''(?i)["\']?secret((-|_)key)?["\']?(\s+)?[:=](\s+)?["\']([^\"\s]+?)["\']'''
  tags = ["alert:repo-owner", "key", "secret", "general"]

  [rules.allowlist]
    paths = [
      # Usually a project not owned by the user that has a lot of FPs for us when
      # folks fork it
      '/azure-cli/',
    ]
    regexes = [
      # Things like: secret = "asdfasdfas" # nosec (used by bandit)
      '''#(\s+)?nosec(\s+|$)''',
      # Things like: secret = "asdfasdfas" //nolint:gosec
      '''\/\/(\s+)?nolint:gosec(\s+|$)''',
      # aws.* is already covered by a different rule
      '''(?i)["\']?aws(.{1,15})secret((-|_)key)?["\']?(\s+)?[:=](\s+)?["\']([^\"\s]+?)["\']''',
      # Things like: secret = ""
      '''(?i)["\']?secret((-|_)key)?["\']?(\s+)?[:=](\s+)?["\']["\']''',
      # Things like: secret = "<PLACEHOLDER>"
      '''(?i)["\']?secret((-|_)key)?["\']?(\s+)?[:=](\s+)?["\']<.+?>["\']''',
      # Things like: secret = "@@PLACEHOLDER@@"
      '''(?i)["\']?secret((-|_)key)?["\']?(\s+)?[:=](\s+)?["\']@@.+?@@["\']''',
      # Things like: "secret: ").append("foo")
      '''(?i)["\']?secret((-|_)key)?["\']?(\s+)?[:=](\s+)?["\']\).+?\(["\']''',
      # Things like: "secret="+some_var+"asdfa"
      '''(?i)["\']?secret((-|_)key)?["\']?(\s+)?[:=](\s+)?["\']\+.+?\+["\'].+?["\']''',
      # Things like: "secret="`+some_var+`"
      '''(?i)["\']?secret((-|_)key)?["\']?(\s+)?[:=](\s+)?["\']`\+.+?\+`["\']''',
      # Things like: secret = "%PLACEHOLDER%"
      '''(?i)["\']?secret((-|_)key)?["\']?(\s+)?[:=](\s+)?["\']%.+?%["\']''',
      # Things like: secret = "(optional char)($|#){PLACEHOLDER}(optional text)"
      # Things like: secret = "FOO_BAR=($|#){PLACEHOLDER}(optional text)"
      '''(?i)["\']?secret((-|_)key)?["\']?(\s+)?[:=](\s+)?["\']((?-i)[A-Z_]{6,})?(.)?(\$|#)\{.+?\}(.+)?["\']''',
      # Things like: secret = "SOME_CONSTANT_PREFIX_${PLACEHOLDER}"
      '''(?i)["\']?secret((-|_)key)?["\']?(\s+)?[:=](\s+)?["\'](?-i)[A-Z_]{9,}\$\{.{4,}?\}["\']''',
      # Things like: secret = "$(PLACEHOLDER..."
      # Or like: secret = "\$(PLACEHOLDER..."
      '''(?i)["\']?secret((-|_)key)?["\']?(\s+)?[:=](\s+)?["\'](\\)?\$\(.*''',
      # Things like: secret = "[%PLACEHOLDER%]"
      '''(?i)["\']?secret((-|_)key)?["\']?(\s+)?[:=](\s+)?["\']\[%.+?%\]["\']''',
      # Things like: secret = "[[PLACEHOLDER]]"
      '''(?i)["\']?secret((-|_)key)?["\']?(\s+)?[:=](\s+)?["\']\[\[.+?\]\]["\']''',
      # Things like: secret = "{PLACEHOLDER}"
      # Things like: secret = "%{PLACEHOLDER}"
      '''(?i)["\']?secret((-|_)key)?["\']?(\s+)?[:=](\s+)?["\'](%)?\{.+?\}["\']''',
      # Things like secret = "$SOME_ENV_VARIABLE-optional-text"
      # Things like secret = "\$SOME_ENV_VARIABLE-optional-text"
      '''(?i)["\']?secret((-|_)key)?["\']?(\s+)?[:=](\s+)?["\'](?-i)(\\)?\$[A-Z][0-9A-Z_]{4,}([\w\-]+)?["\']''',
      # Things like secret = "https://${SOME_PLACEHOLDER}/foo/bar/baz"
      '''(?i)["\']?secret((-|_)key)?["\']?(\s+)?[:=](\s+)?["\']https:\/\/\$\{.+?\}.+?["\']''',
      # Things like secret = "ask"
      '''(?i)["\']?secret((-|_)key)?["\']?(\s+)?[:=](\s+)?["\']ask["\']''',
      # A common false positive for passwords and secrets (e.g. secret = "update-your-postgres-pass-here")
      '''(?i)["\']?secret((-|_)key)?["\']?(\s+)?[:=](\s+)?["\'](?-i).+?[a-z]{2,}-[a-z]{2,}-[a-z]{2,}.+?["\']''',
      # Various words at the start and end that signify a placeholder
      '''(?i)["\']?secret((-|_)key)?["\']?(\s+)?[:=](\s+)?["\'](\/path\/|(\/var)?\/run\/|(0)?123456789|abcdef|admin|ansible|auto|bool:|capi-openstack|change|client|confirm|demo|dict|django-insecure-|example|enter_|file:|grub|invalid|libvirt|none|not|placeholder|pass(w)?(o|0)?(r)?(d|t)(\!)?|provide|path|quickstart|replace|sample|(my)?secret|self|str:|(my)?t(e)?mp|test|this|update|value|your_)(.+?)?["\']''',
      '''(?i)["\']?secret((-|_)key)?["\']?(\s+)?[:=](\s+)?["\'][^\'\"]+?(\.((jp(e)?g)|png|svg|txt)|-auth(entication)?|-cert(ification)?(s)?|-demo|(-|_)key|-tls|_id|_private|(0)?12345(6)?|client|changeme|config(uration)?|cred(ential)?(s)?|data|example(.com|key)?|here|json|_pwd|pass(w)?(o|0)?(r)?(d|t)(\!)?|raw\(|registry|required|secret(s|_v\d)?|string|test|token|value|y(a)?ml)["\']''',
      # Avoid things that look like UUIDs in secrets
      '''(?i)["\']?secret((-|_)key)?["\']?(\s+)?[:=](\s+)?["\'](?-i)[0-9a-z]{8}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{12}["\']''',
    ]

  [[rules.entropies]]
    Min = "3.35"
    Max = "8"
    Group = "5"

[[rules]]
  description = "General Secret"
  regex = '''(?i)<(\s+)?(\w+)?secret([\s\w\"\'=]+)?>([^\"\s]+?)<\/'''
  tags = ["alert:repo-owner", "key", "secret", "general"]

  [rules.allowlist]
    paths = [
      # Usually a project not owned by the user that has a lot of FPs for us when
      # folks fork it
      '/azure-cli/',
    ]
    regexes = [
      # Things like <secret>$SOME_ENV_VARIABLE</secret>
      '''(?i)<(\s+)?(\w+)?secret([\s\w\"\'=]+)?>(?-i)\$[A-Z][0-9A-Z_]+<\/''',
      # Things like <secret>${SOME_VARIABLE}</secret>
      '''(?i)<(\s+)?(\w+)?secret([\s\w\"\'=]+)?>\$\{.+?\}<\/''',
      # Things like <secret>$(SOME_VARIABLE)</secret>
      '''(?i)<(\s+)?(\w+)?secret([\s\w\"\'=]+)?>\$\(.+?\)<\/''',
      # Things like <secret>{SOME_VARIABLE}</secret>
      '''(?i)<(\s+)?(\w+)?secret([\s\w\"\'=]+)?>\{.+?\}<\/''',
      # Various words at the start and end that signify a placeholder
      '''(?i)<(\s+)?(\w+)?secret([\s\w\"\'=]+)?>(\/path\/|(\/var)?\/run\/|(0)?123456789|abcdef|admin|ansible|auto|bool:|capi-openstack|change|client|confirm|demo|dict|django-insecure-|example|enter_|file:|grub|invalid|libvirt|none|not|placeholder|pass(w)?(o|0)?(r)?(d|t)(\!)?|provide|path|quickstart|replace|sample|(my)?secret|self|str:|(my)?t(e)?mp|test|this|update|value|your_)(.+?)?<\/''',
      '''(?i)<(\s+)?(\w+)?secret([\s\w\"\'=]+)?>[^<]+?(\.((jp(e)?g)|png|svg|txt)|-auth(entication)?|-cert(ification)?(s)?|-demo|(-|_)key|-tls|_id|_private|(0)?12345(6)?|client|changeme|config(uration)?|cred(ential)?(s)?|data|example(.com|key)?|here|json|_pwd|pass(w)?(o|0)?(r)?(d|t)(\!)?|raw\(|registry|required|secret(s|_v\d)?|string|test|token|value|y(a)?ml)<\/''',
      # UUIDs
      '''(?i)<(\s+)?(\w+)?secret([\s\w\"\'=]+)?>(?-i)[0-9a-z]{8}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{12}<\/''',
    ]

  [[rules.entropies]]
    Min = "3.35"
    Max = "8"
    Group = "4"

# This rule is currently being tested
[[rules]]
  # Give this a new name after testing, probably "General Secret"
  description = "Unquoted Secret"
  # Secrets/Passwords with quotes are already handled
  # this is to see what else exists out there
  regex = '''(?i)(secret((-|_)key)?|password)=([^;\<\&\"\'\s\n]{5,})'''
  # Don't alert during the tuning phase
  tags = ["group:leaktk-testing", "key", "secret", "general", "unquoted"]

  [[rules.entropies]]
    Min = "3"
    Max = "8"
    Group = "4"

  [rules.allowlist]
    regexes = [
      # Things like: secret==
      '''(?i)(secret((-|_)key)?|password)==''',
      # Things like: secret=<PLACEHOLDER>
      '''(?i)(secret((-|_)key)?|password)=<[^;\<\&\"\'\s\n]{5,}>''',
      # Things like: secret=%PLACEHOLDER%
      '''(?i)(secret((-|_)key)?|password)=%[^;\<\&\"\'\s\n]{5,}%''',
      # Things like: secret=#PLACEHOLDER#
      '''(?i)(secret((-|_)key)?|password)=#[^;\<\&\"\'\s\n]{5,}#''',
      # Things like: secret=`some-command`
      '''(?i)(secret((-|_)key)?|password)=`[^;\<\&\"\'\s\n]{5,}`''',
      # Things like: secret=${PLACEHOLDER} or secret=#{PLACEHOLDER}
      '''(?i)(secret((-|_)key)?|password)=(\$|#)\{[^;\<\&\"\'\s\n]{5,}\}''',
      # Things like: secret=@(PLACEHOLDER) or secret=\(PLACEHOLDER)
      '''(?i)(secret((-|_)key)?|password)=(\@|\\)\([^;\<\&\"\'\s\n]{5,}\)''',
      # Things like: secret={PLACEHOLDER}
      '''(?i)(secret((-|_)key)?|password)=\{[^;\<\&\"\'\s\n]{5,}\}''',
      # Things like: secret=[PLACEHOLDER]
      '''(?i)(secret((-|_)key)?|password)=\[[^;\<\&\"\'\s\n]{5,}\]''',
      # Things like: secret=$(cmd ...
      # Or like: secret=\$(cmd ...
      '''(?i)(secret((-|_)key)?|password)=(\\)?\$\(.+([\s\n]|$)''',
      # Things like: secret=${var...
      # Or like: secret=\${var ...
      '''(?i)(secret((-|_)key)?|password)=(\\)?\$\{.+([\s\n]|$)''',
      # Things that look like unicode for now
      '''(?i)(secret((-|_)key)?|password)=.{0,15}(\\u[A-Za-z0-9]{4}){2}.+([\s\n]|$)''',
      # Things like secret=$SOME_ENV_VARIABLE
      '''(?i)(secret((-|_)key)?|password)=(?-i)[\\]*\$[A-Za-z][\w]+[^;\<\&\"\'\s\n]''',
      # Things like secret=&lt.... (likely documentation resulting in a lot of FPs)
      '''(?i)(secret((-|_)key)?|password)=(\\u0026|&)(#|amp|lt|quot)''',
      # Things like secret=os.environ.get("PASSWORD")
      '''(?i)(secret((-|_)key)?|password)=(?-i)[a-z\._]+[\(\[]''',
      # A common false positive for passwords and secrets (e.g. secret=update-your-postgres-pass-here)
      '''(?i)(secret((-|_)key)?|password)=(?-i)[a-z]{2,}-[a-z]{2,}([a-z])?([;\<\&\"\'\s\n]|$)''',
      # A common false positive for passwords and secrets (e.g. secret=foo.bar.baz_bop)
      '''(?i)(secret((-|_)key)?|password)=(?-i)[a-z\._\-]{8,}''',
      # Various words at the start and end that signify a placeholder
      '''(?i)(secret((-|_)key)?|password)=(\.\*|\/path\/|(\/var)?\/run\/|(0)?123456789|abcdef|admin|ansible|app|auto|bool:|capi-openstack|change|client|confirm|demo|dict|django-insecure-|ec2_|example|enter_|file:|grub|invalid|libvirt|none|not|placeholder|pass(w)?(o|0)?(r)?(d|t)(\!)?|provide|path|quickstart|replace|sample|(my)?secret|self|str:|(my)?t(e)?mp|test|this|update|value|your_)([^;\<\&\"\'\s\n]+)?''',
      '''(?i)(secret((-|_)key)?|password)=[^\"\'\s\n]+?(\.((jp(e)?g)|png|svg|txt)|-auth(entication)?|-cert(ification)?(s)?|-demo|(-|_)key|-tls|_id|_private|(0)?12345(6)?|client|changeme|config(uration)?|cred(ential)?(s)?|data|example(.com|key)?|here|json|_pwd|pass(w)?(o|0)?(r)?(d|t)(\!)?|raw\(|registry|required|secret(s|_v\d)?|string|test|token|value|y(a)?ml)([;\<\&\"\'\s\n]|$)''',
    ]

[[rules]]
  description = "GitHub personal access token"
  regex = '''(ghp_[0-9A-Za-z]{36,})'''
  tags = ["alert:repo-owner", "key", "github", "personal", "token"]

  [[rules.entropies]]
    Min = "2"
    Max = "8"
    Group = "1"

[[rules]]
  description = "GitHub oauth access token"
  regex = '''(gho_[0-9A-Za-z]{36,})'''
  tags = ["alert:repo-owner", "key", "github", "oauth", "token"]

  [[rules.entropies]]
    Min = "2"
    Max = "8"
    Group = "1"

[[rules]]
  description = "GitHub user-to-server token"
  regex = '''(ghu_[0-9A-Za-z]{36,})'''
  tags = ["alert:repo-owner", "key", "github", "user-to-server", "token"]

  [[rules.entropies]]
    Min = "2"
    Max = "8"
    Group = "1"

[[rules]]
  description = "GitHub server-to-server token"
  regex = '''(ghs_[0-9A-Za-z]{36,})'''
  tags = ["alert:repo-owner", "key", "github", "server-to-server", "token"]

  [[rules.entropies]]
    Min = "2"
    Max = "8"
    Group = "1"

[[rules]]
  description = "GitHub refresh token"
  regex = '''(ghr_[0-9A-Za-z]{36,})'''
  tags = ["alert:repo-owner", "key", "github", "refresh", "token"]

  [[rules.entropies]]
    Min = "2"
    Max = "8"
    Group = "1"

[[rules]]
  description = "PayPal Braintree Access Token"
  regex = '''access_token\$production\$[0-9a-z]{16}\$[0-9a-f]{32}'''
  tags = ["alert:repo-owner", "key", "paypal"]

[[rules]]
  description = "Picatic API Key"
  regex = '''sk_live_[0-9a-z]{32}'''
  tags = ["alert:repo-owner", "key", "picatic"]

[[rules]]
  description = "PyPI Upload Token"
  regex = '''pypi-AgEIcHlwaS5vcmc[A-Za-z0-9-_]{50,1000}'''
  tags = ["alert:repo-owner", "key", "pypi"]

[[rules]]
  description = "SendGrid API Key"
  regex = '''SG\.[\w\-]{16,32}\.[\w\-]{16,64}'''
  tags = ["alert:repo-owner", "key", "sendgrid"]

[[rules]]
  description = "Shopify Access Token"
  regex = '''shpat_[a-fA-F0-9]{32}'''
  tags = ["alert:repo-owner", "key", "shopify"]

[[rules]]
  description = "Shopify Custom App Access Token"
  regex = '''shpca_[a-fA-F0-9]{32}'''
  tags = ["alert:repo-owner", "key", "shopify"]

[[rules]]
  description = "Shopify Private App Access Token"
  regex = '''shppa_[a-fA-F0-9]{32}'''
  tags = ["alert:repo-owner", "key", "shopify"]

[[rules]]
  description = "Shopify Shared Secret"
  regex = '''shpss_[a-fA-F0-9]{32}'''
  tags = ["alert:repo-owner", "key", "shopify"]

[[rules]]
  description = "Slack Token"
  regex = '''xox[baprs]-([0-9a-zA-Z-]{10,48})?'''
  tags = ["alert:repo-owner", "key", "slack"]

  [rules.allowlist]
    regexes = [
      # Ignore placeholder values
      '''xox[baprs]-1234-5''',
    ]

  [[rules.entropies]]
    Min = "3.2"
    Max = "8"
    Group = "1"

[[rules]]
  description = "Slack Webhook"
  regex = '''https://hooks.slack.com/services/(T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8,12}/[a-zA-Z0-9_]{24})'''
  tags = ["alert:repo-owner", "key", "slack"]

  [[rules.entropies]]
    Min = "3.2"
    Max = "8"
    Group = "1"

[[rules]]
  description = "Square Access Token"
  regex = '''sq0atp-[0-9A-Za-z\-_]{22}'''
  tags = ["alert:repo-owner", "key", "square"]

[[rules]]
  description = "Square OAuth Secret"
  regex = '''sq0csp-[0-9A-Za-z\\-_]{43}'''
  tags = ["alert:repo-owner", "key", "square"]

[[rules]]
  description = "Stripe API Key"
  regex = '''(?i)stripe(.{0,20})?[sr]k_live_[0-9a-zA-Z]{24}'''
  tags = ["alert:repo-owner", "key", "stripe"]

[[rules]]
  description = "Twilio API Key"
  regex = '''(?i)twilio(.{0,20})?SK[0-9a-f]{32}'''
  tags = ["alert:repo-owner", "key", "twilio"]

[[rules]]
  description = "WP-Config"
  regex='''define(\s+)?\((\s+)?["\'](DB_HOST|DB_NAME|DB_USER|DB_PASSWORD|AUTH_KEY|SECURE_AUTH_KEY|LOGGED_IN_KEY|NONCE_KEY|AUTH_SALT|SECURE_AUTH_SALT|LOGGED_IN_SALT|NONCE_SALT)["\'](\s+)?,(\s+)?["\'](.+?)["\'](\s+)?\)'''
  tags = ["alert:repo-owner", "key", "credential", "wordpress"]

  [rules.allowlist]
    regexes = [
      '''define(\s+)?\((\s+)?["\'](.+?)["\'](\s+)?,(\s+)?["\']<.+?>["\'](\s+)?\)''',
      '''define(\s+)?\((\s+)?["\'](.+?)["\'](\s+)?,(\s+)?["\']\{\{.+?\}\}["\'](\s+)?\)''',
      '''define(\s+)?\((\s+)?["\'](.+?)["\'](\s+)?,(\s+)?["\']\$\{.+?\}["\'](\s+)?\)''',
      # Ignore some placeholder values
      '''define(\s+)?\((\s+)?["\'](.+?)["\'](\s+)?,(\s+)?["\']([^\'\"]+)?(-auth(entication)?|example(.com|key)?|here|localhost|pass(w)?or(d|t)|required|secret(s|_v\d)?|string|test)["\'](\s+)?\)''',
    ]

